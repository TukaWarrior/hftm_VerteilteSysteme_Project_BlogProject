{
  "id" : "4b6bef67-8031-4517-aa54-4d5b6b72d0f4",
  "realm" : "blogproject",
  "notBefore" : 0,
  "defaultSignatureAlgorithm" : "RS256",
  "revokeRefreshToken" : false,
  "refreshTokenMaxReuse" : 0,
  "accessTokenLifespan" : 1500,
  "accessTokenLifespanForImplicitFlow" : 900,
  "ssoSessionIdleTimeout" : 1800,
  "ssoSessionMaxLifespan" : 36000,
  "ssoSessionIdleTimeoutRememberMe" : 0,
  "ssoSessionMaxLifespanRememberMe" : 0,
  "offlineSessionIdleTimeout" : 2592000,
  "offlineSessionMaxLifespanEnabled" : false,
  "offlineSessionMaxLifespan" : 5184000,
  "clientSessionIdleTimeout" : 0,
  "clientSessionMaxLifespan" : 0,
  "clientOfflineSessionIdleTimeout" : 0,
  "clientOfflineSessionMaxLifespan" : 0,
  "accessCodeLifespan" : 60,
  "accessCodeLifespanUserAction" : 300,
  "accessCodeLifespanLogin" : 1800,
  "actionTokenGeneratedByAdminLifespan" : 43200,
  "actionTokenGeneratedByUserLifespan" : 300,
  "oauth2DeviceCodeLifespan" : 600,
  "oauth2DevicePollingInterval" : 5,
  "enabled" : true,
  "sslRequired" : "external",
  "registrationAllowed" : false,
  "registrationEmailAsUsername" : false,
  "rememberMe" : false,
  "verifyEmail" : false,
  "loginWithEmailAllowed" : true,
  "duplicateEmailsAllowed" : false,
  "resetPasswordAllowed" : false,
  "editUsernameAllowed" : false,
  "bruteForceProtected" : false,
  "permanentLockout" : false,
  "maxTemporaryLockouts" : 0,
  "maxFailureWaitSeconds" : 900,
  "minimumQuickLoginWaitSeconds" : 60,
  "waitIncrementSeconds" : 60,
  "quickLoginCheckMilliSeconds" : 1000,
  "maxDeltaTimeSeconds" : 43200,
  "failureFactor" : 30,
  "roles" : {
    "realm" : [ {
      "id" : "a20ef2c5-85ad-4166-892d-5c8ba830092d",
      "name" : "moderator",
      "description" : "Role of blogproject",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "4b6bef67-8031-4517-aa54-4d5b6b72d0f4",
      "attributes" : { }
    }, {
      "id" : "85cede48-43c1-496a-acbe-2971eb497f9b",
      "name" : "offline_access",
      "description" : "${role_offline-access}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "4b6bef67-8031-4517-aa54-4d5b6b72d0f4",
      "attributes" : { }
    }, {
      "id" : "b91260d5-2816-4a25-aa1c-33b6a28d3356",
      "name" : "user",
      "description" : "Role of blogproject",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "4b6bef67-8031-4517-aa54-4d5b6b72d0f4",
      "attributes" : { }
    }, {
      "id" : "f3250996-376c-4262-a381-036b2bceaa3a",
      "name" : "uma_authorization",
      "description" : "${role_uma_authorization}",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "4b6bef67-8031-4517-aa54-4d5b6b72d0f4",
      "attributes" : { }
    }, {
      "id" : "66623f49-cce2-4b13-b188-a01a3d77b8f4",
      "name" : "admin",
      "description" : "Role of blogproject",
      "composite" : false,
      "clientRole" : false,
      "containerId" : "4b6bef67-8031-4517-aa54-4d5b6b72d0f4",
      "attributes" : { }
    }, {
      "id" : "c7049511-a7cd-4337-aadc-80e9aee9c339",
      "name" : "default-roles-blogproject",
      "description" : "${role_default-roles}",
      "composite" : true,
      "composites" : {
        "realm" : [ "offline_access", "uma_authorization" ],
        "client" : {
          "account" : [ "view-profile", "manage-account" ]
        }
      },
      "clientRole" : false,
      "containerId" : "4b6bef67-8031-4517-aa54-4d5b6b72d0f4",
      "attributes" : { }
    } ],
    "client" : {
      "realm-management" : [ {
        "id" : "8c3672b6-ec8f-4cc2-8509-14c2bd4e1053",
        "name" : "view-clients",
        "description" : "${role_view-clients}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-clients" ]
          }
        },
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "56bdad2f-8de6-4a29-8e3d-c471ef0d61b2",
        "name" : "view-realm",
        "description" : "${role_view-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "a9f64c55-ac64-4548-9871-827eddcbe28e",
        "name" : "query-clients",
        "description" : "${role_query-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "b03bd80a-b1bc-4a9e-a658-9a5df7fbc719",
        "name" : "query-groups",
        "description" : "${role_query-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "0526deba-4b50-4178-ab4d-34648a17f349",
        "name" : "realm-admin",
        "description" : "${role_realm-admin}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "view-realm", "view-clients", "query-clients", "query-groups", "manage-authorization", "manage-clients", "view-identity-providers", "manage-identity-providers", "view-authorization", "manage-users", "impersonation", "create-client", "view-events", "manage-events", "view-users", "query-realms", "query-users", "manage-realm" ]
          }
        },
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "1be36eb6-bba3-47a5-8101-bb66ccc600e1",
        "name" : "manage-authorization",
        "description" : "${role_manage-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "f77ac180-d68d-407f-964a-937d3f46f4dc",
        "name" : "manage-clients",
        "description" : "${role_manage-clients}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "ae754ee5-0977-47a4-a4c2-42ea89a5d727",
        "name" : "view-identity-providers",
        "description" : "${role_view-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "14f5df49-49b1-4619-b162-761dec4ac351",
        "name" : "manage-identity-providers",
        "description" : "${role_manage-identity-providers}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "e061025d-3b3a-4898-821d-66e03812b4db",
        "name" : "view-authorization",
        "description" : "${role_view-authorization}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "43cd8b7b-1e57-4863-995e-2ffd693d9808",
        "name" : "manage-users",
        "description" : "${role_manage-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "294dda0d-1fe0-4483-a40d-a278a90cab81",
        "name" : "impersonation",
        "description" : "${role_impersonation}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "ef489621-fb32-4d14-be85-314cadd94a3e",
        "name" : "create-client",
        "description" : "${role_create-client}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "22fc7176-67fe-4ef3-956a-5ea64d437233",
        "name" : "view-events",
        "description" : "${role_view-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "45f905ec-d481-4016-8b7e-035596bb3569",
        "name" : "manage-events",
        "description" : "${role_manage-events}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "e62772f9-7c5b-4bda-8bee-0c4fd77bd110",
        "name" : "view-users",
        "description" : "${role_view-users}",
        "composite" : true,
        "composites" : {
          "client" : {
            "realm-management" : [ "query-groups", "query-users" ]
          }
        },
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "5c4371f0-9d66-4d76-8be3-e33238031412",
        "name" : "query-realms",
        "description" : "${role_query-realms}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "575a26bb-fecc-4527-a7af-e447100c3acd",
        "name" : "query-users",
        "description" : "${role_query-users}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      }, {
        "id" : "8dd72a51-b6da-43f9-913a-77d462973b3f",
        "name" : "manage-realm",
        "description" : "${role_manage-realm}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
        "attributes" : { }
      } ],
      "security-admin-console" : [ ],
      "admin-cli" : [ ],
      "account-console" : [ ],
      "backend-service" : [ ],
      "broker" : [ {
        "id" : "f3c9b1fd-6da3-403e-950a-3545056e1a27",
        "name" : "read-token",
        "description" : "${role_read-token}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "0919824d-5df7-4514-91fc-2e43be4a44ea",
        "attributes" : { }
      } ],
      "account" : [ {
        "id" : "322dd4f4-01fa-464d-a462-d710af94acc7",
        "name" : "delete-account",
        "description" : "${role_delete-account}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3722a211-e51e-4a98-85fd-aa334a871a52",
        "attributes" : { }
      }, {
        "id" : "ad0f306a-0bdd-4f93-ad0e-40086c40897d",
        "name" : "view-consent",
        "description" : "${role_view-consent}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3722a211-e51e-4a98-85fd-aa334a871a52",
        "attributes" : { }
      }, {
        "id" : "d9f87494-5e3e-44a3-8586-04a1db2ca039",
        "name" : "view-profile",
        "description" : "${role_view-profile}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3722a211-e51e-4a98-85fd-aa334a871a52",
        "attributes" : { }
      }, {
        "id" : "25596565-c4ec-4f02-8878-8e841e7154a3",
        "name" : "manage-consent",
        "description" : "${role_manage-consent}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "view-consent" ]
          }
        },
        "clientRole" : true,
        "containerId" : "3722a211-e51e-4a98-85fd-aa334a871a52",
        "attributes" : { }
      }, {
        "id" : "75395c77-5a41-4e68-9863-ce869d8bb6ad",
        "name" : "view-applications",
        "description" : "${role_view-applications}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3722a211-e51e-4a98-85fd-aa334a871a52",
        "attributes" : { }
      }, {
        "id" : "247e1e4e-e688-40c8-961c-c24d5808a9e6",
        "name" : "view-groups",
        "description" : "${role_view-groups}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3722a211-e51e-4a98-85fd-aa334a871a52",
        "attributes" : { }
      }, {
        "id" : "2383dda3-487a-4158-a861-223c3bee8ca6",
        "name" : "manage-account",
        "description" : "${role_manage-account}",
        "composite" : true,
        "composites" : {
          "client" : {
            "account" : [ "manage-account-links" ]
          }
        },
        "clientRole" : true,
        "containerId" : "3722a211-e51e-4a98-85fd-aa334a871a52",
        "attributes" : { }
      }, {
        "id" : "d9f2ef06-5b69-4a0f-ac42-6ecf1ab231e5",
        "name" : "manage-account-links",
        "description" : "${role_manage-account-links}",
        "composite" : false,
        "clientRole" : true,
        "containerId" : "3722a211-e51e-4a98-85fd-aa334a871a52",
        "attributes" : { }
      } ]
    }
  },
  "groups" : [ ],
  "defaultRole" : {
    "id" : "c7049511-a7cd-4337-aadc-80e9aee9c339",
    "name" : "default-roles-blogproject",
    "description" : "${role_default-roles}",
    "composite" : true,
    "clientRole" : false,
    "containerId" : "4b6bef67-8031-4517-aa54-4d5b6b72d0f4"
  },
  "requiredCredentials" : [ "password" ],
  "otpPolicyType" : "totp",
  "otpPolicyAlgorithm" : "HmacSHA1",
  "otpPolicyInitialCounter" : 0,
  "otpPolicyDigits" : 6,
  "otpPolicyLookAheadWindow" : 1,
  "otpPolicyPeriod" : 30,
  "otpPolicyCodeReusable" : false,
  "otpSupportedApplications" : [ "totpAppFreeOTPName", "totpAppGoogleName", "totpAppMicrosoftAuthenticatorName" ],
  "localizationTexts" : { },
  "webAuthnPolicyRpEntityName" : "keycloak",
  "webAuthnPolicySignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyRpId" : "",
  "webAuthnPolicyAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyRequireResidentKey" : "not specified",
  "webAuthnPolicyUserVerificationRequirement" : "not specified",
  "webAuthnPolicyCreateTimeout" : 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyAcceptableAaguids" : [ ],
  "webAuthnPolicyExtraOrigins" : [ ],
  "webAuthnPolicyPasswordlessRpEntityName" : "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms" : [ "ES256" ],
  "webAuthnPolicyPasswordlessRpId" : "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference" : "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment" : "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey" : "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement" : "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout" : 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister" : false,
  "webAuthnPolicyPasswordlessAcceptableAaguids" : [ ],
  "webAuthnPolicyPasswordlessExtraOrigins" : [ ],
  "scopeMappings" : [ {
    "clientScope" : "offline_access",
    "roles" : [ "offline_access" ]
  } ],
  "clientScopeMappings" : {
    "account" : [ {
      "client" : "account-console",
      "roles" : [ "manage-account", "view-groups" ]
    } ]
  },
  "clients" : [ {
    "id" : "3722a211-e51e-4a98-85fd-aa334a871a52",
    "clientId" : "account",
    "name" : "${client_account}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/blogproject/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/blogproject/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "5e077ef3-1621-4ff5-882c-a8a5a619a2a0",
    "clientId" : "account-console",
    "name" : "${client_account-console}",
    "rootUrl" : "${authBaseUrl}",
    "baseUrl" : "/realms/blogproject/account/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/realms/blogproject/account/*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "d81fbc79-9d89-4a79-9b43-e59aa9a3a4fa",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : { }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "a60744d6-a5e7-4d7b-9c69-921616ccf0bf",
    "clientId" : "admin-cli",
    "name" : "${client_admin-cli}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : false,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "500d907e-0d20-4262-97b7-c7350f6479bc",
    "clientId" : "backend-service",
    "name" : "",
    "description" : "",
    "rootUrl" : "https://www.keycloak.org/app/",
    "adminUrl" : "https://www.keycloak.org/app/",
    "baseUrl" : "",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "secret" : "secret",
    "redirectUris" : [ "*" ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : true,
    "serviceAccountsEnabled" : true,
    "publicClient" : false,
    "frontchannelLogout" : true,
    "protocol" : "openid-connect",
    "attributes" : {
      "oidc.ciba.grant.enabled" : "false",
      "client.secret.creation.time" : "1726608739",
      "backchannel.logout.session.required" : "true",
      "oauth2.device.authorization.grant.enabled" : "false",
      "backchannel.logout.revoke.offline.tokens" : "false"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : true,
    "nodeReRegistrationTimeout" : -1,
    "protocolMappers" : [ {
      "id" : "909c2350-ab0e-4a4f-923b-422bf75f34ce",
      "name" : "Client IP Address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientAddress",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientAddress",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "6367a554-916f-4148-967c-af16a4b62876",
      "name" : "Client Host",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "clientHost",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "clientHost",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "783b2f7e-f3b4-4192-a8fa-7211cf17f1f6",
      "name" : "Client ID",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "client_id",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "client_id",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "0919824d-5df7-4514-91fc-2e43be4a44ea",
    "clientId" : "broker",
    "name" : "${client_broker}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "df65ecbc-0bd1-45ab-b6e3-8a1985d37af2",
    "clientId" : "realm-management",
    "name" : "${client_realm-management}",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ ],
    "webOrigins" : [ ],
    "notBefore" : 0,
    "bearerOnly" : true,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : false,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : { },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  }, {
    "id" : "89c9380c-35d7-44b4-a332-f1d80fcf6807",
    "clientId" : "security-admin-console",
    "name" : "${client_security-admin-console}",
    "rootUrl" : "${authAdminUrl}",
    "baseUrl" : "/admin/blogproject/console/",
    "surrogateAuthRequired" : false,
    "enabled" : true,
    "alwaysDisplayInConsole" : false,
    "clientAuthenticatorType" : "client-secret",
    "redirectUris" : [ "/admin/blogproject/console/*" ],
    "webOrigins" : [ "+" ],
    "notBefore" : 0,
    "bearerOnly" : false,
    "consentRequired" : false,
    "standardFlowEnabled" : true,
    "implicitFlowEnabled" : false,
    "directAccessGrantsEnabled" : false,
    "serviceAccountsEnabled" : false,
    "publicClient" : true,
    "frontchannelLogout" : false,
    "protocol" : "openid-connect",
    "attributes" : {
      "post.logout.redirect.uris" : "+",
      "pkce.code.challenge.method" : "S256"
    },
    "authenticationFlowBindingOverrides" : { },
    "fullScopeAllowed" : false,
    "nodeReRegistrationTimeout" : 0,
    "protocolMappers" : [ {
      "id" : "0eccba68-6ce6-464b-b26d-f3ab6e76b858",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    } ],
    "defaultClientScopes" : [ "web-origins", "acr", "roles", "profile", "basic", "email" ],
    "optionalClientScopes" : [ "address", "phone", "offline_access", "microprofile-jwt" ]
  } ],
  "clientScopes" : [ {
    "id" : "6f94b956-82a6-4dbd-9538-6e9226aa1435",
    "name" : "email",
    "description" : "OpenID Connect built-in scope: email",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${emailScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "0ec27d93-f044-46fa-b06e-4696c58c11b6",
      "name" : "email verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-property-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "emailVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email_verified",
        "jsonType.label" : "boolean"
      }
    }, {
      "id" : "2b6d8c84-1c13-488f-b8b9-cc4fe07cbfff",
      "name" : "email",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "email",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "email",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "436febdb-df36-408b-be82-27d07a70e898",
    "name" : "microprofile-jwt",
    "description" : "Microprofile - JWT built-in scope",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "848b903f-f9ea-4e21-9eac-7cbba231a830",
      "name" : "groups",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "multivalued" : "true",
        "user.attribute" : "foo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "groups",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "48f2ee97-7545-4cc0-9eb8-30a34b33167c",
      "name" : "upn",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "upn",
        "jsonType.label" : "String"
      }
    } ]
  }, {
    "id" : "c31ac3e5-17b2-4ce1-82c7-9d5493d044d7",
    "name" : "role_list",
    "description" : "SAML role list",
    "protocol" : "saml",
    "attributes" : {
      "consent.screen.text" : "${samlRoleListScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "324707e4-71f6-4d61-b02f-1c213d3d8016",
      "name" : "role list",
      "protocol" : "saml",
      "protocolMapper" : "saml-role-list-mapper",
      "consentRequired" : false,
      "config" : {
        "single" : "false",
        "attribute.nameformat" : "Basic",
        "attribute.name" : "Role"
      }
    } ]
  }, {
    "id" : "5608daa2-60ab-4ece-a515-6a308b9d4b34",
    "name" : "offline_access",
    "description" : "OpenID Connect built-in scope: offline_access",
    "protocol" : "openid-connect",
    "attributes" : {
      "consent.screen.text" : "${offlineAccessScopeConsentText}",
      "display.on.consent.screen" : "true"
    }
  }, {
    "id" : "88311afd-d98a-4e89-abfe-f9f749bbcf51",
    "name" : "roles",
    "description" : "OpenID Connect scope for add user roles to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "${rolesScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "c4ff3b10-58f8-4b6e-83ce-7df6969b729e",
      "name" : "client roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-client-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "resource_access.${client_id}.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "c1f40417-4976-401b-9d37-c2dfcbbdd52f",
      "name" : "realm roles",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-realm-role-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute" : "foo",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "realm_access.roles",
        "jsonType.label" : "String",
        "multivalued" : "true"
      }
    }, {
      "id" : "26f98dba-b1bc-4394-bc14-88f3d5892637",
      "name" : "audience resolve",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-audience-resolve-mapper",
      "consentRequired" : false,
      "config" : {
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "a30659cc-9116-4ae8-8c14-75e724980f35",
    "name" : "phone",
    "description" : "OpenID Connect built-in scope: phone",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${phoneScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "c7561424-de2d-4ae2-a39b-8abd08179a32",
      "name" : "phone number",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumber",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "5a7a6c46-f63a-4685-bc5e-7652ff59115c",
      "name" : "phone number verified",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "phoneNumberVerified",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "phone_number_verified",
        "jsonType.label" : "boolean"
      }
    } ]
  }, {
    "id" : "0a4b71e3-c243-4f87-8806-6875bed02a2f",
    "name" : "basic",
    "description" : "OpenID Connect scope for add all basic claims to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "779a33d8-f66e-468a-be6f-f90759c4d9f5",
      "name" : "auth_time",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usersessionmodel-note-mapper",
      "consentRequired" : false,
      "config" : {
        "user.session.note" : "AUTH_TIME",
        "id.token.claim" : "true",
        "introspection.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "auth_time",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "527f2f80-ebbf-4927-b4ec-71dba354d1f0",
      "name" : "sub",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-sub-mapper",
      "consentRequired" : false,
      "config" : {
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "404fafe0-e7ef-4475-915c-bdc8983626ff",
    "name" : "address",
    "description" : "OpenID Connect built-in scope: address",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${addressScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "c3a657f4-67f7-4e18-a837-110e87b605e7",
      "name" : "address",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-address-mapper",
      "consentRequired" : false,
      "config" : {
        "user.attribute.formatted" : "formatted",
        "user.attribute.country" : "country",
        "introspection.token.claim" : "true",
        "user.attribute.postal_code" : "postal_code",
        "userinfo.token.claim" : "true",
        "user.attribute.street" : "street",
        "id.token.claim" : "true",
        "user.attribute.region" : "region",
        "access.token.claim" : "true",
        "user.attribute.locality" : "locality"
      }
    } ]
  }, {
    "id" : "efeb20fd-114e-4916-8dd8-3c8d3c157c3c",
    "name" : "web-origins",
    "description" : "OpenID Connect scope for add allowed web origins to the access token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "consent.screen.text" : "",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "e24af470-f685-478f-aefc-c93684e3271e",
      "name" : "allowed web origins",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-allowed-origins-mapper",
      "consentRequired" : false,
      "config" : {
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "6e344a97-51fd-4814-b167-0542ff50e8b0",
    "name" : "acr",
    "description" : "OpenID Connect scope for add acr (authentication context class reference) to the token",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "false",
      "display.on.consent.screen" : "false"
    },
    "protocolMappers" : [ {
      "id" : "8805fdc7-5b23-425c-836a-0dfb876323d4",
      "name" : "acr loa level",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-acr-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "introspection.token.claim" : "true"
      }
    } ]
  }, {
    "id" : "f9476ef2-d0da-41ef-87b5-1c3e163cd407",
    "name" : "profile",
    "description" : "OpenID Connect built-in scope: profile",
    "protocol" : "openid-connect",
    "attributes" : {
      "include.in.token.scope" : "true",
      "consent.screen.text" : "${profileScopeConsentText}",
      "display.on.consent.screen" : "true"
    },
    "protocolMappers" : [ {
      "id" : "070350e7-61a8-4a44-ad39-c161439f1f45",
      "name" : "given name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "firstName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "given_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "8704dfc9-876e-4338-92c1-471ed94e75d5",
      "name" : "nickname",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "nickname",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "nickname",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "3fda8ee0-6444-422c-90ab-368cd4a0858a",
      "name" : "updated at",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "updatedAt",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "updated_at",
        "jsonType.label" : "long"
      }
    }, {
      "id" : "7350a8d6-5a23-47a7-a885-78c980487548",
      "name" : "picture",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "picture",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "picture",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "9c735a8a-ea3c-4d82-9d6f-2e9ccaa5bc98",
      "name" : "birthdate",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "birthdate",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "birthdate",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "a76682fd-2791-4eeb-8e3d-ff1a2a1bc4f7",
      "name" : "locale",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "locale",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "locale",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "d2c6553f-b761-41e1-a5d5-41377b6db1a3",
      "name" : "username",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "username",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "preferred_username",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "1310e6d7-80be-4dc8-9705-51a9b29b2e94",
      "name" : "profile",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "profile",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "profile",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "4ff55105-56a9-43d6-98c8-c8d16f3c8968",
      "name" : "full name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-full-name-mapper",
      "consentRequired" : false,
      "config" : {
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true"
      }
    }, {
      "id" : "4a48e8eb-3671-4f60-95bd-8e7e099d9623",
      "name" : "family name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "lastName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "family_name",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "b0e4e16d-7ba5-4452-a254-96da14a871c6",
      "name" : "zoneinfo",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "zoneinfo",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "zoneinfo",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "24f04272-3884-44e7-a63d-9049c62fe4c7",
      "name" : "gender",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "gender",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "gender",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "2bd738b7-0537-4966-a65f-0cc4f542d76a",
      "name" : "website",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "website",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "website",
        "jsonType.label" : "String"
      }
    }, {
      "id" : "09e20ccc-a72e-4626-811e-498053678371",
      "name" : "middle name",
      "protocol" : "openid-connect",
      "protocolMapper" : "oidc-usermodel-attribute-mapper",
      "consentRequired" : false,
      "config" : {
        "introspection.token.claim" : "true",
        "userinfo.token.claim" : "true",
        "user.attribute" : "middleName",
        "id.token.claim" : "true",
        "access.token.claim" : "true",
        "claim.name" : "middle_name",
        "jsonType.label" : "String"
      }
    } ]
  } ],
  "defaultDefaultClientScopes" : [ "basic", "acr", "email", "roles", "role_list", "web-origins", "profile" ],
  "defaultOptionalClientScopes" : [ "address", "microprofile-jwt", "offline_access", "phone" ],
  "browserSecurityHeaders" : {
    "contentSecurityPolicyReportOnly" : "",
    "xContentTypeOptions" : "nosniff",
    "referrerPolicy" : "no-referrer",
    "xRobotsTag" : "none",
    "xFrameOptions" : "SAMEORIGIN",
    "contentSecurityPolicy" : "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection" : "1; mode=block",
    "strictTransportSecurity" : "max-age=31536000; includeSubDomains"
  },
  "smtpServer" : { },
  "eventsEnabled" : false,
  "eventsListeners" : [ "jboss-logging" ],
  "enabledEventTypes" : [ ],
  "adminEventsEnabled" : false,
  "adminEventsDetailsEnabled" : false,
  "identityProviders" : [ ],
  "identityProviderMappers" : [ ],
  "components" : {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy" : [ {
      "id" : "2d5c5411-04da-4628-ad70-0324d825c5b6",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "126ac163-efcf-4fb9-a471-9d5741647ee5",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "oidc-usermodel-property-mapper", "oidc-address-mapper", "saml-user-attribute-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-property-mapper", "saml-role-list-mapper", "oidc-usermodel-attribute-mapper", "oidc-full-name-mapper" ]
      }
    }, {
      "id" : "a586785c-ce16-4711-825a-c3f761c7db67",
      "name" : "Allowed Client Scopes",
      "providerId" : "allowed-client-templates",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "allow-default-scopes" : [ "true" ]
      }
    }, {
      "id" : "608eaac2-1447-4116-a170-4c7bdc13cb03",
      "name" : "Allowed Protocol Mapper Types",
      "providerId" : "allowed-protocol-mappers",
      "subType" : "authenticated",
      "subComponents" : { },
      "config" : {
        "allowed-protocol-mapper-types" : [ "saml-role-list-mapper", "saml-user-attribute-mapper", "oidc-full-name-mapper", "oidc-sha256-pairwise-sub-mapper", "saml-user-property-mapper", "oidc-usermodel-property-mapper", "oidc-address-mapper", "oidc-usermodel-attribute-mapper" ]
      }
    }, {
      "id" : "2125b1ba-5993-449a-a26c-b5dcddf23fcc",
      "name" : "Consent Required",
      "providerId" : "consent-required",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    }, {
      "id" : "c4230495-c428-4267-af8b-9cedc3030685",
      "name" : "Trusted Hosts",
      "providerId" : "trusted-hosts",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "host-sending-registration-request-must-match" : [ "true" ],
        "client-uris-must-match" : [ "true" ]
      }
    }, {
      "id" : "a75a18b0-d3b9-4a6c-9fd3-b55344afd675",
      "name" : "Max Clients Limit",
      "providerId" : "max-clients",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : {
        "max-clients" : [ "200" ]
      }
    }, {
      "id" : "a9d99fd3-727a-42e3-b048-10a29061b7ef",
      "name" : "Full Scope Disabled",
      "providerId" : "scope",
      "subType" : "anonymous",
      "subComponents" : { },
      "config" : { }
    } ],
    "org.keycloak.keys.KeyProvider" : [ {
      "id" : "793d47b0-0097-4918-99fd-f42c79d30a72",
      "name" : "rsa-generated",
      "providerId" : "rsa-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpQIBAAKCAQEA6CpWamunf/BxmZ3Hozk8SrK/482bk6iSH9IUJOLQvhoTa2gop46hIGXk/J4PivvigJwLJgy1ZSJpcQ++fwLTR0TqWGx9AnfkchArB4wGIhRxSwFkkIDyB+H8+WKiTUzeBZjX7uv26lA4jLUuH88XeDRPJyOV+y8h09b7uUHa0W+j6L+oYHOJWyt7NnBzPHiMJnb3xfbd6la/MQIVb8Lx5vy4nPllyM6gbLklmVrBjG+8HzV4eC2/S0QhPj+gCa2RMTfu6ucFJ3u7aAJENmJCHjRpge6+YXw6hvT0asVsFlEgMKW5L/684A6CmqL0T5wwEnrV0uEYcU32KfAzv1Ss3wIDAQABAoIBAGNBBmTE1X063DYiYCEF7SK6PJM1aZe874uvEnGajkdXeonmo8rOjU/+f+EH6fkvKmx1ScbglARCq/VsF7LREGZdrhpTdzZA72dcRikZ0d1sA+tfExE8LzzzfmVXp6+IdzrJVzeLpaoS1bpCExACRzRamKRQ8GPMiJe6Ry+yWcxDL8HSLvqsv4bbt+IG5sXKMFvo06i+vg+d2pu+FwsRPVvDakvm+6xDz/0giiHHCs/VCJxBtLg7nha2neJx6lPHZG+t0BuX2iM+/o2iKtEdZ5PNa3oTtPjigapUrvpCLQswyabw0At4svQ21sUv4bydmcpYDdb76jMxXs+hpowoSzECgYEA+Cc+Le8MKpDVj0DdQfkmLiq4thciaNP1w/irI7eY+dFE1Cz3+Xl0S1PU8/GfarvAsV7a5t/axf6fSMTWvVDDds0gni+anlJQsvJ8JvQIaZ3xSnEejnQLRfnl/ht2KVC5/3wHdEm6iSe37o2pCC6NR9Ml184Bbtsf9HIUF6+7Rb0CgYEA74Gs49I0F3h+UZVIQwmH2omvPUO490lBHAaJZDanXHRe0xCx9BeolEevqb+yTnANbEk5EEn7BK5ZL5hGuXsT8tFsBGNwBSX3Garb6A1Ms01u5OLOjR6MUxxzeaw44bAjZBo3nYHhdsJH9+rtB+H7iHlab6xyvSExlp+kgBN74MsCgYEAtlsgNmEUb7M/PKZN8c1FYWfDlQwrHR2l3P0/xl+E6w/9pG3nTE0USMayFxHYNHcEg1NRSZf3DMiwBKmhpD1VZlgXQCd7WBzlcJsA4R8zj2mhhzLZYZWlMycQ/Erx6iqIhFaAo9QKX//wCj3PmVOcPsvLY2rfYrdkJB4w5bcdx4ECgYEAnujgKGyAyY3V6hVtU6VQMSynS7PSVqiQ/aJMqGQm2Q4RGGN8XuMPpAqIP82D5c0s6ssOhINBfJKddBnJ2ykRTEutKqA7Y/8Tm0ElFSs118WprU3bFADPxBkdeP5O41d1s+Y9PlE9ogk3rQN/b3p95Mf3vB6kJl6Ow0x63cuPps8CgYEAhZ2iJKLRHpihuz70Nf6jZRbh3GEzLEdB0LMaJbGtR/vEDmiCvXtU2dRn/jtDi5xFO6uIGcHB+3uUd0XOK494TiGWgNm1xQUS97UXSYbm0y1sW6ncY+yPP8VSpw/5DtqkYj35XvyKGXGv6AgdHsb50RzxC0j2VcxsnngD5HT3q8o=" ],
        "keyUse" : [ "SIG" ],
        "certificate" : [ "MIICpTCCAY0CBgGSAeXuTjANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtibG9ncHJvamVjdDAeFw0yNDA5MTcyMTI5NThaFw0zNDA5MTcyMTMxMzhaMBYxFDASBgNVBAMMC2Jsb2dwcm9qZWN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA6CpWamunf/BxmZ3Hozk8SrK/482bk6iSH9IUJOLQvhoTa2gop46hIGXk/J4PivvigJwLJgy1ZSJpcQ++fwLTR0TqWGx9AnfkchArB4wGIhRxSwFkkIDyB+H8+WKiTUzeBZjX7uv26lA4jLUuH88XeDRPJyOV+y8h09b7uUHa0W+j6L+oYHOJWyt7NnBzPHiMJnb3xfbd6la/MQIVb8Lx5vy4nPllyM6gbLklmVrBjG+8HzV4eC2/S0QhPj+gCa2RMTfu6ucFJ3u7aAJENmJCHjRpge6+YXw6hvT0asVsFlEgMKW5L/684A6CmqL0T5wwEnrV0uEYcU32KfAzv1Ss3wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQAMBItOY2SjuKErcjbLjs45iEVeJ66fFUss7zE/t1nSoVX2iKJSEaQan6E1gTVdbY+CEf4M3V6C7PcQLOC84Cc6qiZ3xcQYYErF5Ypk/vv69WafiYAup/9EHWwnuMRa7EGd9cqWaZVWq2q4r+KZewz3NYBi1iXNRnt1FICR4ZCOU0Sbx6w4BO2PzUMYzR1hBcqGjuNRZnBRvOHR7ahTc/d3wl8TuVookFiF+P61W3nR3EwQaowmPnYmzjPf/5WYjAeoS8SsUQcB3kfrvEbZwnYis8kQj34sPFfayIZZn0/Rly7/VUPHEexXIaPYGac43DEAKmRUenEvRZPS9shvkKcL" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "ed70805f-f266-4a3e-aceb-212a9cb44b0a",
      "name" : "hmac-generated-hs512",
      "providerId" : "hmac-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "cc9532be-31b4-4e5a-a7e5-393cadd62495" ],
        "secret" : [ "sPQIoRit4yIi4JMtTZblMupc4koLQJpDS5zZq332W9cyckIOvrUxLwhEl23IVb48RQPC9EhrOQ0Rx9nmXU6OvyPpLi4kgEGEfqkxInHrqRR0EmZixRe8IDvmBUW6kIHuemWZjFd9uQ9knBimqJ8C_I0kK-IMtBFVNumvLrfBfZM" ],
        "priority" : [ "100" ],
        "algorithm" : [ "HS512" ]
      }
    }, {
      "id" : "4969d666-2565-4064-8dfd-484c90128e71",
      "name" : "aes-generated",
      "providerId" : "aes-generated",
      "subComponents" : { },
      "config" : {
        "kid" : [ "654493ab-e002-4113-a7bf-4b952a009796" ],
        "secret" : [ "_cDHAI1AX0mZXO9weYhlaQ" ],
        "priority" : [ "100" ]
      }
    }, {
      "id" : "1e354615-4c02-469d-b749-a04bfe68043a",
      "name" : "rsa-enc-generated",
      "providerId" : "rsa-enc-generated",
      "subComponents" : { },
      "config" : {
        "privateKey" : [ "MIIEpAIBAAKCAQEApsx7QolX6yxwdB4GiN5m+TQX84LMpl1RAOi35tZ6fisQ6q46pOPQOUGQfk/+7IzVD/b0+GfrqjClJhZotn0j46xWKA8yuhXUyWvJbEISrpriCDhx8ixJp5i+SaHZWe1T5KMvNQdS6uQcH/2/7NZOhytmc0GQT/CiOgTwEBoznX4BsEHAvkI7B1GAwpMgUfF5+G2MAtkczS3p74H7lFBhguNx+Y+aJ7j/W9QY/Mqh5Mvd9LhYl857Vx0n6rlvyl8pQ1MxPJZxbzFLFiUx3Hxlb5eOYto7mEeny5gYA3RULjQa6s8MABl86soz7xnKrCDb8PgNBbcckl+Wrj7sE22dsQIDAQABAoIBABSFGnLcj6bccDcwzHABIFzvFjU8da3P1BvPBXTOFQK5jJq6dXd8mUy57qtDbyKtzrZolMmMi1cEJgUSA67TpVsog+7os75l2igvbPe3BzJY1o7ZVtdKsIMATQSk9ybThhseIjwdWwuPpZAf+QELelyxr6hlO/pBqcuGePwaJRhuSbDdUAOliW6NZz4HbJGQmiFRP3TS1ygispb2dlD4VdOiiust2SIBY+E/RlpIp6aIv31XFkkSqZkYkKDLYAwpaRVBkGCohsBNm+UntxhrJVqDEtUxim3VdZ9XmHd5UJ4MIlZK3xxhybg+Oz9np8gHlNethj3nr28N6krBF44TNJMCgYEA0U3tjFtNTiQbE5oTkWa3niz72ONOT2Cg/pMVHh6wMB/BBjcWxwiVwfQ3YIqz9lRHPxChyRitrIqpmyuNAcKhnTrzjiMC8Ou/pn/ZOgdRcQpiajJaAuOPpYbjA/BIi5jFGaJTOocsiaGNvW0Hx3rJjmtENA1Qy5iY6ITpiAnR6UsCgYEAzALqC77QP9YvBNLPdXxj9Jh0U5BAjRhplpQJgSCChvWsfhbgQzn7skuN79G1kyg7ZmK2YUK81NbUPkKskdxyrx0B9vMgrIr9TCpaP56cPKhhkTeV53j7JlQ6JBduxvf/4HxYBWD0whHQkfQMCYV43mHb24dRRRfFRbE0Kx3r03MCgYEAqZQDxNYsegUS0vzgocuhNUyo9/6icfmONvQgBflDMppnn4t+rt+rxisBuvxl9kwuNVBaZD3UaJkn9YqBgk2Y93TN4/lF5sB61IF9FGDdgUKynewRtYl91tTElWpWvJOYDb7Qw/jFAvWbi0ANL3eyWetapPms3mfSa4FUXF3obqUCgYA0P0rRVzzeHGxOP+8Bl6nBqomgHQFrISVpeuA0Qa8sAR7767/jd6YOM2tWT87AsT0FK6Kppf3WRG52w3yOnnaAgl1OcVWc2rukFfSm9mfs4PKbzjCF52XqmweI1rd4HWtagn3IYtxMF2Pi/S1YAubBjS5ROoaFu2C6SHej0zXiIQKBgQDRF2bO5Ojz0gD4J/RNl5pKKTTtTNCti0y0GkRBaAo0zvNRf3XITVUnbAWFReYmzJj4il7z8kufJf6raiUbuFyH0SSuhmW6MLGN+DUR/60Aa5weYuRj9qzC0BORvul5EEPMWg2G+tBKCReW+OfZKCGqKVzWF9cbvjq2v7w98TeucQ==" ],
        "keyUse" : [ "ENC" ],
        "certificate" : [ "MIICpTCCAY0CBgGSAeXvJTANBgkqhkiG9w0BAQsFADAWMRQwEgYDVQQDDAtibG9ncHJvamVjdDAeFw0yNDA5MTcyMTI5NTlaFw0zNDA5MTcyMTMxMzlaMBYxFDASBgNVBAMMC2Jsb2dwcm9qZWN0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEApsx7QolX6yxwdB4GiN5m+TQX84LMpl1RAOi35tZ6fisQ6q46pOPQOUGQfk/+7IzVD/b0+GfrqjClJhZotn0j46xWKA8yuhXUyWvJbEISrpriCDhx8ixJp5i+SaHZWe1T5KMvNQdS6uQcH/2/7NZOhytmc0GQT/CiOgTwEBoznX4BsEHAvkI7B1GAwpMgUfF5+G2MAtkczS3p74H7lFBhguNx+Y+aJ7j/W9QY/Mqh5Mvd9LhYl857Vx0n6rlvyl8pQ1MxPJZxbzFLFiUx3Hxlb5eOYto7mEeny5gYA3RULjQa6s8MABl86soz7xnKrCDb8PgNBbcckl+Wrj7sE22dsQIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBeNR6Rp4qh0kaBFu6z5O6pUMmxR568ZolFxWC6he5u5v2Cy85ZmoV77pJBsofAc1e99jZsS6ag/oh3TAsq+3hqBuIlXCvkhLWHJCyPwdU3/IUxIZXDyRKt4dv94G5ueATTnXPPHTtCqSmNPFVmsL1Rjpt5jo186eAtEkIDqKfaZfPSwiOQiG6Fl01ZyJCL5wKSRWLC+MCyetM5wYZDw/bepBMwWfDjFUbG8q/T48/nPMWYgAy+RTvBmpyu2KNU8hrNKP+ye3dDbGp7BOsRyqUyTIVbdhOmY22spUzep2+dTMqF9x6cyta1QiyIWdo7ZnEc/5jUFnmOlulQ5nvDGXgR" ],
        "priority" : [ "100" ],
        "algorithm" : [ "RSA-OAEP" ]
      }
    } ]
  },
  "internationalizationEnabled" : false,
  "supportedLocales" : [ ],
  "authenticationFlows" : [ {
    "id" : "045f6a04-76a2-47a4-b3cd-5c4ba681a60a",
    "alias" : "Account verification options",
    "description" : "Method with which to verity the existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-email-verification",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Verify Existing Account by Re-authentication",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "f1e6a965-58e1-4da1-9705-1cffaf05d874",
    "alias" : "Browser - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "10d48d9f-84f1-4587-a666-a75d027c2e5b",
    "alias" : "Direct Grant - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "660f19a1-6bd4-430a-8db3-89cabc5efad7",
    "alias" : "First broker login - Conditional OTP",
    "description" : "Flow to determine if the OTP is required for the authentication",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-otp-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "caf3f174-de7e-43b8-8b28-f8ba61dce3ca",
    "alias" : "Handle Existing Account",
    "description" : "Handle what to do if there is existing account with same email/username like authenticated identity provider",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-confirm-link",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Account verification options",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0dec4762-eb64-4f14-9e39-e68e3cc431a3",
    "alias" : "Reset - Conditional OTP",
    "description" : "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "conditional-user-configured",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-otp",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "968201ec-8b80-4a5a-adb5-aa792ab97bfa",
    "alias" : "User creation or linking",
    "description" : "Flow for the existing/non-existing user alternatives",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "create unique user config",
      "authenticator" : "idp-create-user-if-unique",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Handle Existing Account",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "8fdfbc60-f843-44ff-a6b6-e83ae931c54c",
    "alias" : "Verify Existing Account by Re-authentication",
    "description" : "Reauthentication of existing account",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "idp-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "First broker login - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "cbf4aa0d-fbb6-4abf-9616-730a6f00231b",
    "alias" : "browser",
    "description" : "browser based authentication",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-cookie",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "auth-spnego",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "identity-provider-redirector",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 25,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "forms",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "93020c94-2e3d-4dc0-8a74-90554d925af0",
    "alias" : "clients",
    "description" : "Base authentication for clients",
    "providerId" : "client-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "client-secret",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-secret-jwt",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "client-x509",
      "authenticatorFlow" : false,
      "requirement" : "ALTERNATIVE",
      "priority" : 40,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "e80b1d5d-2071-49ac-b6b0-0ea87f0eb8c2",
    "alias" : "direct grant",
    "description" : "OpenID Connect Resource Owner Grant",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "direct-grant-validate-username",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "direct-grant-validate-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 30,
      "autheticatorFlow" : true,
      "flowAlias" : "Direct Grant - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "debb17e3-492d-4e31-99e8-122886bd915a",
    "alias" : "docker auth",
    "description" : "Used by Docker clients to authenticate against the IDP",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "docker-http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "5c3c5541-36f6-4534-9731-c7eefe5073e6",
    "alias" : "first broker login",
    "description" : "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticatorConfig" : "review profile config",
      "authenticator" : "idp-review-profile",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "User creation or linking",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "0282455f-7a66-411a-b431-46ca85ce8f26",
    "alias" : "forms",
    "description" : "Username, password, otp and other auth forms.",
    "providerId" : "basic-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "auth-username-password-form",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 20,
      "autheticatorFlow" : true,
      "flowAlias" : "Browser - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c3362654-25f2-4421-9f1f-89f14f1796aa",
    "alias" : "registration",
    "description" : "registration flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-page-form",
      "authenticatorFlow" : true,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : true,
      "flowAlias" : "registration form",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "10e8b6f4-7bc7-403e-9e0a-30a11d8e930c",
    "alias" : "registration form",
    "description" : "registration form",
    "providerId" : "form-flow",
    "topLevel" : false,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "registration-user-creation",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-password-action",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 50,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-recaptcha-action",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 60,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "registration-terms-and-conditions",
      "authenticatorFlow" : false,
      "requirement" : "DISABLED",
      "priority" : 70,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "c97f63f1-476d-410e-979f-e805a0aa48ec",
    "alias" : "reset credentials",
    "description" : "Reset credentials for a user if they forgot their password or something",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "reset-credentials-choose-user",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-credential-email",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 20,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticator" : "reset-password",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 30,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    }, {
      "authenticatorFlow" : true,
      "requirement" : "CONDITIONAL",
      "priority" : 40,
      "autheticatorFlow" : true,
      "flowAlias" : "Reset - Conditional OTP",
      "userSetupAllowed" : false
    } ]
  }, {
    "id" : "498a9674-3a9c-40de-b507-3aae6ee9ee5d",
    "alias" : "saml ecp",
    "description" : "SAML ECP Profile Authentication Flow",
    "providerId" : "basic-flow",
    "topLevel" : true,
    "builtIn" : true,
    "authenticationExecutions" : [ {
      "authenticator" : "http-basic-authenticator",
      "authenticatorFlow" : false,
      "requirement" : "REQUIRED",
      "priority" : 10,
      "autheticatorFlow" : false,
      "userSetupAllowed" : false
    } ]
  } ],
  "authenticatorConfig" : [ {
    "id" : "e757a7a1-814a-4115-ad6f-2c8d4e695bd0",
    "alias" : "create unique user config",
    "config" : {
      "require.password.update.after.registration" : "false"
    }
  }, {
    "id" : "b4f74e4f-d4b8-4fde-aebb-faeecab83038",
    "alias" : "review profile config",
    "config" : {
      "update.profile.on.first.login" : "missing"
    }
  } ],
  "requiredActions" : [ {
    "alias" : "CONFIGURE_TOTP",
    "name" : "Configure OTP",
    "providerId" : "CONFIGURE_TOTP",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 10,
    "config" : { }
  }, {
    "alias" : "TERMS_AND_CONDITIONS",
    "name" : "Terms and Conditions",
    "providerId" : "TERMS_AND_CONDITIONS",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 20,
    "config" : { }
  }, {
    "alias" : "UPDATE_PASSWORD",
    "name" : "Update Password",
    "providerId" : "UPDATE_PASSWORD",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 30,
    "config" : { }
  }, {
    "alias" : "UPDATE_PROFILE",
    "name" : "Update Profile",
    "providerId" : "UPDATE_PROFILE",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 40,
    "config" : { }
  }, {
    "alias" : "VERIFY_EMAIL",
    "name" : "Verify Email",
    "providerId" : "VERIFY_EMAIL",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 50,
    "config" : { }
  }, {
    "alias" : "delete_account",
    "name" : "Delete Account",
    "providerId" : "delete_account",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 60,
    "config" : { }
  }, {
    "alias" : "webauthn-register",
    "name" : "Webauthn Register",
    "providerId" : "webauthn-register",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 70,
    "config" : { }
  }, {
    "alias" : "webauthn-register-passwordless",
    "name" : "Webauthn Register Passwordless",
    "providerId" : "webauthn-register-passwordless",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 80,
    "config" : { }
  }, {
    "alias" : "VERIFY_PROFILE",
    "name" : "Verify Profile",
    "providerId" : "VERIFY_PROFILE",
    "enabled" : false,
    "defaultAction" : false,
    "priority" : 90,
    "config" : { }
  }, {
    "alias" : "delete_credential",
    "name" : "Delete Credential",
    "providerId" : "delete_credential",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 100,
    "config" : { }
  }, {
    "alias" : "update_user_locale",
    "name" : "Update User Locale",
    "providerId" : "update_user_locale",
    "enabled" : true,
    "defaultAction" : false,
    "priority" : 1000,
    "config" : { }
  } ],
  "browserFlow" : "browser",
  "registrationFlow" : "registration",
  "directGrantFlow" : "direct grant",
  "resetCredentialsFlow" : "reset credentials",
  "clientAuthenticationFlow" : "clients",
  "dockerAuthenticationFlow" : "docker auth",
  "firstBrokerLoginFlow" : "first broker login",
  "attributes" : {
    "cibaBackchannelTokenDeliveryMode" : "poll",
    "cibaAuthRequestedUserHint" : "login_hint",
    "clientOfflineSessionMaxLifespan" : "0",
    "oauth2DevicePollingInterval" : "5",
    "clientSessionIdleTimeout" : "0",
    "actionTokenGeneratedByUserLifespan.idp-verify-account-via-email" : "",
    "actionTokenGeneratedByUserLifespan.verify-email" : "",
    "clientOfflineSessionIdleTimeout" : "0",
    "actionTokenGeneratedByUserLifespan.execute-actions" : "",
    "cibaInterval" : "5",
    "realmReusableOtpCode" : "false",
    "cibaExpiresIn" : "120",
    "oauth2DeviceCodeLifespan" : "600",
    "parRequestUriLifespan" : "60",
    "clientSessionMaxLifespan" : "0",
    "organizationsEnabled" : "false",
    "shortVerificationUri" : "",
    "actionTokenGeneratedByUserLifespan.reset-credentials" : ""
  },
  "keycloakVersion" : "25.0.5",
  "userManagedAccessAllowed" : false,
  "organizationsEnabled" : false,
  "clientProfiles" : {
    "profiles" : [ ]
  },
  "clientPolicies" : {
    "policies" : [ ]
  }
}