# This file is for configuring the keycloack container created by quarkus dev-services. 

# quarkus.http.port=8081
# quarkus.hibernate-orm.database.generation=create
# quarkus.hibernate-orm.database.generation=drop-and-create

# Bind to all network interfaces (I added this for testing in LAN)
quarkus.http.host=0.0.0.0
# Default port (8080), but you can specify another port if needed (I added this for testing in LAN)
quarkus.http.port=8080
%dev.quarkus.http.port=8181
quarkus.swagger-ui.always-include=true

%test,prod.quarkus.hibernate-orm.database.generation=drop-and-create
%test,prod.quarkus.datasource.db-kind=h2
%prod.quarkus.datasource.jdbc.url=jdbc:h2:mem:
quarkus.oidc.auth-server-url=http://keycloak-container:8180/realms/blogproject

# Because of datasource error
%test,prod.quarkus.hibernate-orm.database.generation=drop-and-create
%test,prod.quarkus.datasource.db-kind=h2
%prod.quarkus.datasource.jdbc.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
%prod.quarkus.datasource.username=sa
%prod.quarkus.datasource.password=sa

# Enables authentication windows in swagger-ui using tokens
quarkus.smallrye-openapi.security-scheme=jwt

# KEYCLOAK
quarkus.oidc.client-id=backend-service
quarkus.oidc.credentials.secret=secret
# a) KeyCloak als eigener Container
# quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/blog
# quarkus.oidc.auth-server-url=http://localhost:8180/auth/realms/blog
# quarkus.smallrye-openapi.security-scheme=jwt
# b) KeyCloak Dev Services: Users und Rollenzuweisung

#user.name=password
quarkus.keycloak.devservices.users.alice=alice
quarkus.keycloak.devservices.roles.alice=admin
quarkus.keycloak.devservices.users.bob=bob
quarkus.keycloak.devservices.roles.bob=moderator
quarkus.keycloak.devservices.users.carl=carl
quarkus.keycloak.devservices.roles.carl=user

quarkus.keycloak.devservices.port=8088
quarkus.keycloak.devservices.realm-name=blog

# CROSS Origin 
quarkus.http.cors=true
quarkus.http.cors.origins=*